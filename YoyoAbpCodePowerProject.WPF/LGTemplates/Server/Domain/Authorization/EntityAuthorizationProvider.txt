@{
    var data = Model.Server;
}
using System.Linq;
using Abp.Authorization;
using Abp.Configuration.Startup;
using Abp.Localization;
using Abp.MultiTenancy;
using @data.ReplaceInfo.CompanyNamespace@{@data.ReplaceInfo.SolutionNamespace}.Authorization;

namespace @data.ReplaceInfo.CompanyNamespace@{@data.ReplaceInfo.SolutionNamespace}.Authorization
{
    /// <summary>
    /// 权限配置
    /// See <see cref="@{@data.Entity.Name}Permissions" /> 
    ///</summary>
    public class @{@data.Entity.Name}AuthorizationProvider : AuthorizationProvider
    {
        private readonly bool _isMultiTenancyEnabled;

		public @{@data.Entity.Name}AuthorizationProvider()
		{

		}

        public @{@data.Entity.Name}AuthorizationProvider(bool isMultiTenancyEnabled)
        {
            _isMultiTenancyEnabled = isMultiTenancyEnabled;
        }

        public @{@data.Entity.Name}AuthorizationProvider(IMultiTenancyConfig multiTenancyConfig)
        {
            _isMultiTenancyEnabled = multiTenancyConfig.IsEnabled;
        }

		public override void SetPermissions(IPermissionDefinitionContext context)
		{
			var pages = context.GetPermissionOrNull(AppPermissions.Pages) ?? context.CreatePermission(AppPermissions.Pages, L("Pages"));
			var administration = pages.Children.FirstOrDefault(p => p.Name == AppPermissions.Pages_Administration) ?? pages.CreateChildPermission(AppPermissions.Pages_Administration, L("Administration"));

			var @{@data.Entity.LowerName} = administration.CreateChildPermission(@{@data.Entity.Name}Permissions.Node , L("@{@data.Entity.Name}"));
			<pre>@{@data.Entity.LowerName}.CreateChildPermission(@{@data.Entity.Name}Permissions.Query, L("Query@{@data.Entity.Name}"));</pre>
			<pre>@{@data.Entity.LowerName}.CreateChildPermission(@{@data.Entity.Name}Permissions.Create, L("Create@{@data.Entity.Name}"));</pre>
			<pre>@{@data.Entity.LowerName}.CreateChildPermission(@{@data.Entity.Name}Permissions.Edit, L("Edit@{@data.Entity.Name}"));</pre>
			<pre>@{@data.Entity.LowerName}.CreateChildPermission(@{@data.Entity.Name}Permissions.Delete, L("Delete@{@data.Entity.Name}"));</pre>
			<pre>@{@data.Entity.LowerName}.CreateChildPermission(@{@data.Entity.Name}Permissions.BatchDelete, L("BatchDelete@{@data.Entity.Name}"));</pre>
			<pre>@{@data.Entity.LowerName}.CreateChildPermission(@{@data.Entity.Name}Permissions.ExportExcel, L("ExportToExcel"));</pre>

			//// custom codes
												
			<pre>@{@ViewBag.OldCustomCode}</pre>

			//// custom codes end
		}

		private static ILocalizableString L(string name)
		{
			return new LocalizableString(name, AppConsts.LocalizationSourceName);
		}
    }
}
